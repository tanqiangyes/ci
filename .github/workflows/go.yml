name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
        
    - name: Check code formatting using gofmt
      # You may pin to the exact commit or the version.
      # uses: Jerome1337/gofmt-action@4899d680cd7d4a959becfe74f97170c5847f859c
      uses: Jerome1337/gofmt-action@v1.0.4
      with:
        # Path used by gofmt command
        gofmt-path: ./
        # Flags to pass to gofmt, e.g. -d or -l
        gofmt-flags: -l -M
      
    - name:  reviewdog
      # You may pin to the exact commit or the version.
      # uses: reviewdog/action-tfsec@2507d9e96f7f997b16e76bb6373c6c9c0eeba2d4
      uses: reviewdog/action-tfsec@v1.0.0
      with:
        # GITHUB_TOKEN
        github_token: ${{ github.token }}
        # Report level for reviewdog [info,warning,error]
        level: info
        # Reporter of reviewdog command [github-pr-check,github-pr-review].  Default is github-pr-check.
        reporter: github-pr-check
        # List of arguments to send to tfsec For the output to be parsable by reviewdog --format=checkstyle is enforced Default is blank.
        flags: blank
      
    - name: golangci-lint
      # You may pin to the exact commit or the version.
      # uses: golangci/golangci-lint-action@5c56cd6c9dc07901af25baab6f2b0d9f3b7c3018
      uses: golangci/golangci-lint-action@v2.5.2
      with:
        # version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: latest
        # golangci-lint command line arguments
        args: ''
        # golangci-lint working directory, default is project root
        working-directory: /ci
        # the token is used for fetching patch of a pull request to show only new issues
        github-token: ${{ github.token }}
        # if set to true and the action runs on a pull request - the action outputs only newly found issues
        only-new-issues: true
        # if set to true then action uses pre-installed Go
        skip-go-installation: true
        # if set to true then the action don't cache or restore ~/go/pkg.
        skip-pkg-cache: false
        # if set to true then the action don't cache or restore ~/.cache/go-build.
        skip-build-cache: false
        
        
    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
